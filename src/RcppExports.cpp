// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// estimateLong_cpp
List estimateLong_cpp(Rcpp::List in_list);
RcppExport SEXP LDMod_estimateLong_cpp(SEXP in_listSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type in_list(in_listSEXP);
    rcpp_result_gen = Rcpp::wrap(estimateLong_cpp(in_list));
    return rcpp_result_gen;
END_RCPP
}
// estimateFisher
List estimateFisher(Rcpp::List in_list);
RcppExport SEXP LDMod_estimateFisher(SEXP in_listSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type in_list(in_listSEXP);
    rcpp_result_gen = Rcpp::wrap(estimateFisher(in_list));
    return rcpp_result_gen;
END_RCPP
}
// predictLong_cpp
List predictLong_cpp(Rcpp::List in_list);
RcppExport SEXP LDMod_predictLong_cpp(SEXP in_listSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type in_list(in_listSEXP);
    rcpp_result_gen = Rcpp::wrap(predictLong_cpp(in_list));
    return rcpp_result_gen;
END_RCPP
}
// rGIG_cpp
Eigen::VectorXd rGIG_cpp(Eigen::VectorXd p, Eigen::VectorXd a, Eigen::VectorXd b, unsigned long seed);
RcppExport SEXP LDMod_rGIG_cpp(SEXP pSEXP, SEXP aSEXP, SEXP bSEXP, SEXP seedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type p(pSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type a(aSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type b(bSEXP);
    Rcpp::traits::input_parameter< unsigned long >::type seed(seedSEXP);
    rcpp_result_gen = Rcpp::wrap(rGIG_cpp(p, a, b, seed));
    return rcpp_result_gen;
END_RCPP
}
// simulateLongGH_cpp
List simulateLongGH_cpp(Rcpp::List in_list);
RcppExport SEXP LDMod_simulateLongGH_cpp(SEXP in_listSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type in_list(in_listSEXP);
    rcpp_result_gen = Rcpp::wrap(simulateLongGH_cpp(in_list));
    return rcpp_result_gen;
END_RCPP
}
// simulateLongME_cpp
List simulateLongME_cpp(Rcpp::List in_list);
RcppExport SEXP LDMod_simulateLongME_cpp(SEXP in_listSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type in_list(in_listSEXP);
    rcpp_result_gen = Rcpp::wrap(simulateLongME_cpp(in_list));
    return rcpp_result_gen;
END_RCPP
}
// test_db_EiV_GIG
double test_db_EiV_GIG(double p, double a, double b);
RcppExport SEXP LDMod_test_db_EiV_GIG(SEXP pSEXP, SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(test_db_EiV_GIG(p, a, b));
    return rcpp_result_gen;
END_RCPP
}
// test_EiV_NGIG
double test_EiV_NGIG(Eigen::VectorXd& U, Eigen::MatrixXd& Sigma, Eigen::VectorXd& delta, Eigen::VectorXd& mu, double p, double a, double b);
RcppExport SEXP LDMod_test_EiV_NGIG(SEXP USEXP, SEXP SigmaSEXP, SEXP deltaSEXP, SEXP muSEXP, SEXP pSEXP, SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::VectorXd& >::type U(USEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd& >::type Sigma(SigmaSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd& >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd& >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(test_EiV_NGIG(U, Sigma, delta, mu, p, a, b));
    return rcpp_result_gen;
END_RCPP
}
// test_EiV_GIG
double test_EiV_GIG(double p, double a, double b);
RcppExport SEXP LDMod_test_EiV_GIG(SEXP pSEXP, SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(test_EiV_GIG(p, a, b));
    return rcpp_result_gen;
END_RCPP
}
// test_PreDiagsolver
double test_PreDiagsolver(Rcpp::List in_list);
RcppExport SEXP LDMod_test_PreDiagsolver(SEXP in_listSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type in_list(in_listSEXP);
    rcpp_result_gen = Rcpp::wrap(test_PreDiagsolver(in_list));
    return rcpp_result_gen;
END_RCPP
}
// sampleR
Eigen::VectorXi sampleR(int n, Eigen::VectorXd w_in);
RcppExport SEXP LDMod_sampleR(SEXP nSEXP, SEXP w_inSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type w_in(w_inSEXP);
    rcpp_result_gen = Rcpp::wrap(sampleR(n, w_in));
    return rcpp_result_gen;
END_RCPP
}
// sample_internalR
Rcpp::List sample_internalR(int n, Eigen::VectorXd p_in, Eigen::VectorXd selected_in, Eigen::VectorXd w_in);
RcppExport SEXP LDMod_sample_internalR(SEXP nSEXP, SEXP p_inSEXP, SEXP selected_inSEXP, SEXP w_inSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type p_in(p_inSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type selected_in(selected_inSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type w_in(w_inSEXP);
    rcpp_result_gen = Rcpp::wrap(sample_internalR(n, p_in, selected_in, w_in));
    return rcpp_result_gen;
END_RCPP
}
